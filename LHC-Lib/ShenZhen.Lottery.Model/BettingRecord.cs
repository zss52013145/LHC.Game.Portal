//------------------------------------------------------------------------------
// <auto-generated>
//    此代码是根据模板生成的。
//
//    手动更改此文件可能会导致应用程序中发生异常行为。
//    如果重新生成代码，则将覆盖对此文件的手动更改。
// </auto-generated>
//------------------------------------------------------------------------------

using ShenZhen.Lottery.Public;

namespace ShenZhen.Lottery.Model
{
    using System;

    public partial class BettingRecord
    {
        public long Id { get; set; }
        public int UserId { get; set; }
        public string TryId { get; set; }
        public int lType { get; set; }
        public string Issue { get; set; }
        public int BetCount { get; set; }
        public string PlayName { get; set; }
        public string BetNum { get; set; }
        public decimal Peilv { get; set; }
        public int UnitMoney { get; set; }
        public int WinCount { get; set; }
        public decimal WinMoney { get; set; }
        public int WinState { get; set; }
        public int Type { get; set; }
        public string NewOrderId { get; set; }
        public System.DateTime SubTime { get; set; }
        public decimal BetYE { get; set; }


        public decimal TuiShui2 { get; set; }  //退水
        public decimal TuiShui3 { get; set; }  //退水
        public decimal TuiShui4 { get; set; }  //退水
        public decimal TuiShui5 { get; set; }  //退水


        public decimal SY { get; set; }


        public UserInfo User { get; set; }

        public string UserName { get; set; }            //扩展


        public double ShowRebates
        {
            get
            {
                return Util.GetEntityById<UserInfo>(this.UserId).Rebates * 1000;
            }
        }


        //扩展字段

        //获取股东退水比例【顶层】
        public static double GetTuiShuiRate(int userId, int lType, string pankou, string playName, string betNum)
        {

            #region 玩法 处理

            if (playName.Contains("特码"))
            {

                if (betNum == "单" || betNum == "双")
                {
                    playName = "特码单双";
                }
                else if (betNum == "大" || betNum == "小")
                {
                    playName = "特码大小";
                }
                else if (betNum == "合单" || betNum == "合双")
                {
                    playName = "特码合数单双";
                }
                else if (betNum == "合大" || betNum == "合小")
                {
                    playName = "特码合数大小";
                }
                else if (betNum == "尾大" || betNum == "尾小")
                {
                    playName = "特码尾大尾小";
                }
                else if (betNum == "大单" || betNum == "小单")
                {
                    playName = "特码大单小单";
                }
                else if (betNum == "大双" || betNum == "小双")
                {
                    playName = "特码大双小双";
                }
                else if (betNum == "家禽" || betNum == "野禽")
                {
                    playName = "特码家禽野禽";
                }
                else if (betNum == "红波")
                {
                    playName = "特码色波-红波";
                }
                else if (betNum == "蓝波")
                {
                    playName = "特码色波-蓝波";
                }
                else if (betNum == "绿波")
                {
                    playName = "特码色波-绿波";
                }

            }
            else if (playName.Contains("正码"))
            {
                if (betNum == "单" || betNum == "双")
                {
                    playName = "总和单双";
                }
                else if (betNum == "大" || betNum == "小")
                {
                    playName = "总和大小";
                }

            }
            else if (playName.Contains("正") && playName.Contains("特"))
            {

                if (betNum == "单" || betNum == "双")
                {
                    playName = "正特单双";
                }
                else if (betNum == "大" || betNum == "小")
                {
                    playName = "正特大小";
                }
                else if (betNum == "合单" || betNum == "合双")
                {
                    playName = "正特合数单双";
                }
                else if (betNum == "合大" || betNum == "合小")
                {
                    playName = "正特合数大小";
                }
                else if (betNum == "尾大" || betNum == "尾小")
                {
                    playName = "正特尾大尾小";
                }
                else if (betNum == "大单" || betNum == "小单")
                {
                    playName = "正特大单小单";
                }
                else if (betNum == "大双" || betNum == "小双")
                {
                    playName = "正特大双小双";
                }
                else if (betNum == "家禽" || betNum == "野禽")
                {
                    playName = "正特家禽野禽";
                }
                else if (betNum == "红波")
                {
                    playName = "正特色波-红波";
                }
                else if (betNum == "蓝波")
                {
                    playName = "正特色波-蓝波";
                }
                else if (betNum == "绿波")
                {
                    playName = "正特色波-绿波";
                }
                else
                {
                    playName = "正特";
                }

            }




            #endregion


            string sql2 = "select * from TuiShuiInfo where UserId = 1 and ltype =" + lType + " and playname='" + playName + "'";

            TuiShuiInfo tsi = Util.ReaderToModel<TuiShuiInfo>(sql2);

            object obj = tsi.GetType().GetProperty(pankou).GetValue(tsi, null);

            return Convert.ToDouble(obj);

        }


        public string ShowTuiShui
        {

            get
            {


                string result = "";


                UserInfo user = Util.GetEntityById<UserInfo>(UserId);

                double tuishui = GetTuiShuiRate(UserId, lType, user.PanKou, PlayName, BetNum);



                double ts3 = 0;
                double ts4 = 0;
                double ts5 = user.TuiShuiRate;


                double m2 = 0;              //股东退水
                double m3 = 0;              //股东退水
                double m4 = 0;              //股东退水
                double m5 = 0;              //股东退水


                UserInfo pUser = Util.GetEntityById<UserInfo>(user.PId);

                #region 过程

                //4级
                if (pUser.Type == 4)                        //上级是代理
                {
                    ts4 = pUser.TuiShuiRate;        //代理

                    pUser = Util.GetEntityById<UserInfo>(pUser.PId);

                    ts3 = pUser.TuiShuiRate;        //总代



                    if (ts3 != 100 && ts4 != 100 && ts5 != 100)
                    {
                        //没有不退
                        m2 = tuishui;
                        m3 = tuishui - ts3;
                        m4 = tuishui - ts3 - ts4;
                        m5 = tuishui - ts3 - ts4 - ts5;

                    }
                    else
                    {

                        if (ts3 == 100)
                        {
                            m2 = tuishui;
                        }
                        else if (ts4 == 100)
                        {

                            m2 = tuishui;
                            m3 = tuishui - ts3;
                        }
                        else if (ts5 == 100)
                        {

                            m2 = tuishui;
                            m3 = tuishui - ts3;
                            m4 = tuishui - ts3 - ts4;
                        }
                    }

                }
                else if (pUser.Type == 3)                  //上级是总代
                {

                    ts3 = pUser.TuiShuiRate;        //总代

                    if (ts3 != 100 && ts5 != 100)
                    {
                        m2 = tuishui;
                        m3 = tuishui - ts3;
                        m5 = tuishui - ts3 - ts5;
                        m4 = m5;    //中间隔开的和最后面一致

                    }
                    else
                    {
                        if (ts3 == 100)
                        {
                            m2 = tuishui;
                        }
                        else if (ts5 == 100)
                        {
                            m2 = tuishui;
                            m3 = tuishui - ts3;
                        }

                    }

                }
                else if (pUser.Type == 2)       //上级是股东
                {

                    if (ts5 == 0)  //全退
                    {

                        m2 = tuishui;
                        m3 = tuishui;
                        m4 = tuishui;
                        m5 = tuishui;
                    }
                    else if (ts5 == 100)   //全扣
                    {
                        m2 = tuishui;
                    }
                    else
                    {
                        m2 = tuishui;
                        //m3 = tuishui;
                        //m4 = tuishui;
                        m5 = tuishui - ts5;

                        m3 = m5;
                        m4 = m5;

                    }

                }





                #endregion


                result += m2 + "|" + m3 + "|" + m4 + "|" + m5;


                return result;


                //string sql = "select * from TuiShuiInfo where UserId =   " + UserId + " and ltype =" + lType + " and playname='" + PlayName + "'";

                //TuiShuiInfo t = Util.ReaderToModel<TuiShuiInfo>(sql);

                //UserInfo user = Util.GetEntityById<UserInfo>(UserId);

                //Type type = t.GetType();

                //object obj = type.GetProperty(user.PanKou).GetValue(t, null);   //会员的退水
                //object obj2 = null;

                //UserInfo pUser = Util.GetEntityById<UserInfo>(user.PId);


                //if (pUser.Type == 2)
                //{

                //    sql = "select * from TuiShuiInfo where UserId = 1 and ltype =" + lType + " and playname='" + PlayName + "'";

                //    t = Util.ReaderToModel<TuiShuiInfo>(sql);

                //    obj2 = t.GetType().GetProperty(user.PanKou).GetValue(t, null);


                //    if (user.TuiShuiRate == 0)
                //    {
                //        //全退
                //        result = obj + "|" + obj + "|" + obj + "|" + obj;
                //    }
                //    else if (user.TuiShuiRate == 100)
                //    {
                //        //t.GetType().GetProperty(user.PanKou).GetValue(t, null);

                //        //不退
                //        result = 0 + "|" + 0 + "|" + 0 + "|" + obj2;
                //    }
                //    else
                //    {
                //        //不退
                //        result = obj + "|" + obj2 + "|" + obj2 + "|" + obj2;
                //    }

                //}
                //else if (pUser.Type == 3)
                //{

                //    sql = "select * from TuiShuiInfo where UserId = 1 and ltype =" + lType + " and playname='" + PlayName + "'";

                //    t = Util.ReaderToModel<TuiShuiInfo>(sql);

                //    obj2 = t.GetType().GetProperty(user.PanKou).GetValue(t, null);


                //    if (user.TuiShuiRate == 0)
                //    {
                //        //全退
                //        result = obj + "|" + obj + "|" + obj + "|" + obj;
                //    }
                //    else if (user.TuiShuiRate == 100)
                //    {
                //        //t.GetType().GetProperty(user.PanKou).GetValue(t, null);

                //        //不退
                //        result = 0 + "|" + 0 + "|" + 0 + "|" + obj2;
                //    }
                //    else
                //    {
                //        //不退
                //        result = obj + "|" + obj2 + "|" + obj2 + "|" + obj2;
                //    }

                //}

                ////上级

                ////总代

                ////股东



                //return r + "";
            }
        }










        public string ShowPeilv
        {

            get
            {
                if (lType == 3 || lType == 4)
                {
                    if (PlayName == "二中特")
                    {
                        return "50/25";
                    }
                    else if (PlayName == "三中二")
                    {
                        return "110/20";
                    }
                }

                return Peilv + "";
            }

        }

        public string ShowIssue
        {
            get
            {
                //string year = DateTime.Now.Year + "";

                //if (!this.Issue.StartsWith(year))
                //{
                //    return year + this.Issue;
                //}

                return this.Issue;
            }
        }

        public string ShowYE
        {
            get
            {
                if (BetYE == null)
                {
                    return "";
                }
                else
                {
                    return "" + BetYE;
                }
            }
        }



        //可赢金额
        public string PossibleWinMoney
        {
            get
            {
                if (lType == 3 || lType == 4)
                {
                    if (PlayName == "二中特")
                    {
                        return (this.UnitMoney * 50 * this.BetCount - this.BetCount * this.UnitMoney) + "/" + (this.UnitMoney * 25 * this.BetCount - this.BetCount * this.UnitMoney);
                    }
                    else if (PlayName == "三中二")
                    {
                        return (this.UnitMoney * 110 * this.BetCount - this.BetCount * this.UnitMoney) + "/" + (this.UnitMoney * 20 * this.BetCount - this.BetCount * this.UnitMoney);
                    }
                }



                return (this.UnitMoney * this.Peilv * this.BetCount - this.BetCount * this.UnitMoney).ToString();
            }
        }

        public string BetDetail
        {
            get { return this.PlayName + this.BetNum + "@" + this.ShowPeilv; }
        }

        public string ShowTime
        {
            get { return this.SubTime.ToString("yyyy-MM-dd HH:mm:ss"); }
        }

        public string ShowTime2
        {
            get { return this.SubTime.ToString("MM-dd HH:mm:ss"); }
        }

        public string ShowTime3
        {
            get { return this.SubTime.ToString("MM-dd HH:mm:ss"); }
        }

        public string BetMoney
        {
            get
            {
                return (this.UnitMoney * this.BetCount).ToString("0.00");
            }
        }



        //输赢
        public decimal Shuying         //----------------待定
        {
            get
            {
                decimal result = 0;

                if (this.WinState > 2)
                {
                    //result = this.WinMoney + this.TuiShui - (this.BetCount * this.UnitMoney);
                    result = this.SY;
                }

                return result;
            }
        }



        public decimal ShuyingForBettingRecord         //----------------18-9-17
        {
            get
            {
                decimal result = 0;

                if (this.WinState > 2)
                {
                    result = this.WinMoney + this.TuiShui5 - (this.BetCount * this.UnitMoney);
                    //result = this.SY;
                }

                return result;
            }
        }



        public string ShuyingForBettingRecord2         //----------------19-8-18
        {
            get
            {
                decimal result = 0;

                if (this.WinState > 2)
                {
                    result = this.WinMoney + this.TuiShui5 - (this.BetCount * this.UnitMoney);
                    //result = this.SY;
                }

                string str = "";
                if (result >= 0)
                {
                    str = "<font style='color: #00b939;'>" + result + "</font>";
                }
                else
                {
                    str = "<font style='color: red;'>" + result + "</font>";
                }

                return str;


            }
        }





        public decimal ShuYing
        {
            get
            {
                if (this.WinState > 2)
                {
                    return this.WinMoney + this.TuiShui5 - (this.BetCount * this.UnitMoney);
                }

                return 0;
            }
        }

        public string ShuYing2
        {
            get
            {
                decimal result = 0;

                if (this.WinState > 2)
                {
                    //result = this.WinMoney + this.TuiShui - (this.BetCount * this.UnitMoney);
                    result = this.SY;
                }

                string str = "";
                if (result >= 0)
                {
                    str = "<font style='color: lime;'>" + result + "</font>";
                }
                else
                {
                    str = "<font style='color: red;'>" + result + "</font>";
                }

                return str;
            }
        }

        //开奖号码
        public string ShowWinNum
        {
            get
            {
                string sql = "select Num from LotteryRecord where Issue ='" + this.Issue + "' and lType=" + this.lType;

                object o = SqlHelper.ExecuteScalar(sql);

                if (o != null && o != DBNull.Value)
                {
                    return o.ToString();
                }

                return "---";
            }
        }


        public string ShowUserName
        {
            get
            {
                string sql = "select * from UserInfo where Id=" + UserId;

                User = Util.ReaderToModel<UserInfo>(sql);

                if (User != null)
                {
                    return User.UserName;
                }

                return "";
            }
        }


        public string ShowlTypeName
        {
            get
            {
                return Util.GetlTypeName(lType);
            }
        }


        public string ShowState
        {
            get
            {
                if (WinState == 1)
                {
                    return "未结算";
                }
                //else if (WinState == 2)
                //{
                //    return "已撤单";
                //}
                //else if (WinState == 3)
                //{
                //    return "已中奖";
                //}
                //else if (WinState == 4)
                //{
                //    return "未中奖";
                //}
                //else if (WinState == 5)
                //{
                //    return "和";
                //}

                return "已结算";
            }
        }
    }
}
